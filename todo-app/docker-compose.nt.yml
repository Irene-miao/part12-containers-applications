version: '3.9'

services:
  app:
    image: front-prod
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
#    environment:
 #     - REACT_APP_BACKEND_URL=http://back-prod:3001
    container_name: front-prod
    networks:
      net:
        aliases:
          - front-prod
  server:
    image: back-prod
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis
    networks:
      net:
        aliases:
          - back-prod
    container_name: back-prod
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    networks:
      net:
        aliases:
          - mongo
    container_name: mongo
  redis:
    image: redis
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
    networks:
      net:
        aliases:
          - redis
    container_name: redis
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:81
    networks:
      net:
        aliases:
          - reverse-proxy
    container_name: reverse-proxy
    depends_on:
      - app
      - server
networks:
  net:
    driver: bridge
